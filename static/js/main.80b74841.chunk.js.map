{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","SortType","handleSortOfGoods","sort","newSortedGoods","sorted","copyOfNewSortedGoods","_toConsumableArray","Alphabet","a","b","localeCompare","Length","length","Reverse","reverse","App","_useState","useState","_useState2","_slicedToArray","sortedGoods","setSortedGoods","_useState3","_useState4","isResetButtonActive","setIsResetButtonActive","_useState5","_useState6","sortType","setSortType","_jsxs","className","children","_jsx","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"uPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGGC,EAAQ,SAARA,GAAQ,OAARA,EAAQ,oBAARA,EAAQ,kBAARA,EAAQ,gBAARA,CAAQ,EAARA,GAAQ,IAMb,SAASC,EAAkBC,EAAgBC,GACzC,IAAIC,EAAmB,GACjBC,EAAoBC,YAAOH,GAcjC,OAZID,IAASF,EAASO,WACpBH,EAASC,EAAqBH,MAAK,SAACM,EAAGC,GAAC,OAAKD,EAAEE,cAAcD,EAAE,KAG7DP,IAASF,EAASW,SACpBP,EAASC,EAAqBH,MAAK,SAACM,EAAGC,GAAC,OAAKD,EAAEI,OAASH,EAAEG,MAAM,KAG9DV,IAASF,EAASa,UACpBT,EAASC,EAAqBS,WAGzBV,CACT,CAEO,IAAMW,EAAgB,WAC3B,IAAAC,EAAsCC,mBAASlB,GAAgBmB,EAAAC,YAAAH,EAAA,GAAxDI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,EAAsDL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAA9DE,EAAmBD,EAAA,GAAEE,EAAsBF,EAAA,GAClDG,EAAgCT,mBAA0B,MAAKU,EAAAR,YAAAO,EAAA,GAAxDE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAgC5B,OACEG,eAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC9BF,eAAA,OAAKC,UAAU,UAASC,SAAA,CACtBC,cAAA,UACEC,KAAK,SACLH,UAAWI,IAAG,SAAU,UAAW,CACjC,WAAYP,IAAa5B,EAASO,WAEpC6B,QAtC+B,WACrC,IAAMhC,EAASH,EAAkBD,EAASO,SAAUa,GAEpDC,EAAejB,GACfqB,GAAuB,GACvBI,EAAY7B,EAASO,SACvB,EAgCgDyB,SACzC,wBAIDC,cAAA,UACEC,KAAK,SACLH,UAAWI,IAAG,SAAU,aAAc,CACpC,WAAYP,IAAa5B,EAASW,SAEpCyB,QAxCyB,WAC/B,IAAMhC,EAASH,EAAkBD,EAASW,OAAQS,GAElDC,EAAejB,GACfqB,GAAuB,GACvBI,EAAY7B,EAASW,OACvB,EAkC0CqB,SACnC,mBAIDC,cAAA,UACEC,KAAK,SACLH,UAAWI,IAAG,SAAU,aAAc,CACpC,WAAYP,IAAa5B,EAASa,UAEpCuB,QA1CoB,WAC1B,IAAMhC,EAASH,EAAkBD,EAASa,QAASO,GAEnDC,EAAejB,GACfqB,GAAuB,GACvBI,EAAY7B,EAASa,QACvB,EAoCqCmB,SAC9B,YAGAR,GACCS,cAAA,UACEC,KAAK,SACLH,UAAU,4BACVK,QA1CgB,WACxBf,EAAetB,GACf0B,GAAuB,GACvBI,EAAY,KACd,EAsCqCG,SAC5B,aAKLC,cAAA,MAAAD,SACGZ,EAAYiB,KAAI,SAACC,GAAI,OACpBL,cAAA,MAAI,UAAQ,OAAMD,SACfM,GADqBA,EAEnB,QAKf,EC9HAC,IAASC,OACPP,cAAClB,EAAG,IACJ0B,SAASC,eAAe,Q","file":"static/js/main.80b74841.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport React, { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  Alphabet = 'alphabet',\n  Reverse = 'reverse',\n  Length = 'length',\n}\n\nfunction handleSortOfGoods(sort: SortType, newSortedGoods: string[]): string[] {\n  let sorted: string[] = [];\n  const copyOfNewSortedGoods = [...newSortedGoods];\n\n  if (sort === SortType.Alphabet) {\n    sorted = copyOfNewSortedGoods.sort((a, b) => a.localeCompare(b));\n  }\n\n  if (sort === SortType.Length) {\n    sorted = copyOfNewSortedGoods.sort((a, b) => a.length - b.length);\n  }\n\n  if (sort === SortType.Reverse) {\n    sorted = copyOfNewSortedGoods.reverse();\n  }\n\n  return sorted;\n}\n\nexport const App: React.FC = () => {\n  const [sortedGoods, setSortedGoods] = useState(goodsFromServer);\n  const [isResetButtonActive, setIsResetButtonActive] = useState(false);\n  const [sortType, setSortType] = useState<SortType | null>(null);\n\n  const handleButtonSortAlphabetically = () => {\n    const sorted = handleSortOfGoods(SortType.Alphabet, sortedGoods);\n\n    setSortedGoods(sorted);\n    setIsResetButtonActive(true);\n    setSortType(SortType.Alphabet);\n  };\n\n  const handleButtonSortByLength = () => {\n    const sorted = handleSortOfGoods(SortType.Length, sortedGoods);\n\n    setSortedGoods(sorted);\n    setIsResetButtonActive(true);\n    setSortType(SortType.Length);\n  };\n\n  const handleButtonReverse = () => {\n    const sorted = handleSortOfGoods(SortType.Reverse, sortedGoods);\n\n    setSortedGoods(sorted);\n    setIsResetButtonActive(true);\n    setSortType(SortType.Reverse);\n  };\n\n  const handleButtonReset = () => {\n    setSortedGoods(goodsFromServer);\n    setIsResetButtonActive(false);\n    setSortType(null);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortType === SortType.Alphabet,\n          })}\n          onClick={handleButtonSortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortType === SortType.Length,\n          })}\n          onClick={handleButtonSortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': sortType === SortType.Reverse,\n          })}\n          onClick={handleButtonReverse}\n        >\n          Reverse\n        </button>\n        {isResetButtonActive && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleButtonReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n      <ul>\n        {sortedGoods.map((good) => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}