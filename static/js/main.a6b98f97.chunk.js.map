{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","handleSortOfGoods","sort","newSortedGoods","sorted","Alphabet","a","b","localeCompare","Length","length","Reverse","reverse","App","useState","sortedGoods","setSortedGoods","isResetButtonActive","setIsResetButtonActive","sortType","setSortType","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASF,SAASC,EAAkBC,EAAgBC,GACzC,IAAIC,EAAmB,GAcvB,OAZIF,IAASH,EAASM,WACpBD,EAAS,YAAID,GAAgBD,MAAK,SAACI,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,OAG1DL,IAASH,EAASU,SACpBL,EAAS,YAAID,GAAgBD,MAAK,SAACI,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,WAGvDR,IAASH,EAASY,UACpBP,EAAS,YAAID,GAAgBS,WAGxBR,G,SArBJL,K,oBAAAA,E,gBAAAA,E,mBAAAA,M,KAwBE,IAAMc,EAAgB,WAC3B,MAAsCC,mBAASd,GAA/C,mBAAOe,EAAP,KAAoBC,EAApB,KACA,EAAsDF,oBAAS,GAA/D,mBAAOG,EAAP,KAA4BC,EAA5B,KACA,EAAgCJ,mBAA0B,MAA1D,mBAAOK,EAAP,KAAiBC,EAAjB,KAgCA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UAAW,CACjC,WAAYJ,IAAapB,EAASM,WAEpCmB,QAtC+B,WACrC,IAAMpB,EAASH,EAAkBF,EAASM,SAAUU,GAEpDC,EAAeZ,GACfc,GAAuB,GACvBE,EAAYrB,EAASM,WA4BjB,iCAUA,wBACEiB,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAYJ,IAAapB,EAASU,SAEpCe,QAxCyB,WAC/B,IAAMpB,EAASH,EAAkBF,EAASU,OAAQM,GAElDC,EAAeZ,GACfc,GAAuB,GACvBE,EAAYrB,EAASU,SA8BjB,4BAUA,wBACEa,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAYJ,IAAapB,EAASY,UAEpCa,QA1CoB,WAC1B,IAAMpB,EAASH,EAAkBF,EAASY,QAASI,GAEnDC,EAAeZ,GACfc,GAAuB,GACvBE,EAAYrB,EAASY,UAgCjB,qBASCM,GACC,wBACEK,KAAK,SACLD,UAAU,4BACVG,QA1CgB,WACxBR,EAAehB,GACfkB,GAAuB,GACvBE,EAAY,OAoCN,sBASJ,6BACGL,EAAYU,KAAI,SAACC,GAAD,OACf,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCtHlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a6b98f97.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport React, { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  Alphabet = 'alphabet',\n  Length = 'length',\n  Reverse = 'reverse',\n}\n\nfunction handleSortOfGoods(sort: SortType, newSortedGoods: string[]): string[] {\n  let sorted: string[] = [];\n\n  if (sort === SortType.Alphabet) {\n    sorted = [...newSortedGoods].sort((a, b) => a.localeCompare(b));\n  }\n\n  if (sort === SortType.Length) {\n    sorted = [...newSortedGoods].sort((a, b) => a.length - b.length);\n  }\n\n  if (sort === SortType.Reverse) {\n    sorted = [...newSortedGoods].reverse();\n  }\n\n  return sorted;\n}\n\nexport const App: React.FC = () => {\n  const [sortedGoods, setSortedGoods] = useState(goodsFromServer);\n  const [isResetButtonActive, setIsResetButtonActive] = useState(false);\n  const [sortType, setSortType] = useState<SortType | null>(null);\n\n  const handleButtonSortAlphabetically = () => {\n    const sorted = handleSortOfGoods(SortType.Alphabet, sortedGoods);\n\n    setSortedGoods(sorted);\n    setIsResetButtonActive(true);\n    setSortType(SortType.Alphabet);\n  };\n\n  const handleButtonSortByLength = () => {\n    const sorted = handleSortOfGoods(SortType.Length, sortedGoods);\n\n    setSortedGoods(sorted);\n    setIsResetButtonActive(true);\n    setSortType(SortType.Length);\n  };\n\n  const handleButtonReverse = () => {\n    const sorted = handleSortOfGoods(SortType.Reverse, sortedGoods);\n\n    setSortedGoods(sorted);\n    setIsResetButtonActive(true);\n    setSortType(SortType.Reverse);\n  };\n\n  const handleButtonReset = () => {\n    setSortedGoods(goodsFromServer);\n    setIsResetButtonActive(false);\n    setSortType(null);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortType === SortType.Alphabet,\n          })}\n          onClick={handleButtonSortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortType === SortType.Length,\n          })}\n          onClick={handleButtonSortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': sortType === SortType.Reverse,\n          })}\n          onClick={handleButtonReverse}\n        >\n          Reverse\n        </button>\n        {isResetButtonActive && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleButtonReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n      <ul>\n        {sortedGoods.map((good) => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}